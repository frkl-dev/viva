name: Cargo Build & Test

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: "build & test on Rust (version: ${{ matrix.toolchain }})"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
#          - beta
#          - nightly
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-${{ matrix.toolchain }}"
          shared-key: ""
          key: ""
          env-vars: ""
          workspaces: ""
          cache-directories: ""
          cache-targets: ""
          cache-on-failure: ""
          save-if: ""
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo build --verbose
      - run: cargo test --verbose

  build_on_windows:
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install OpenSSL
        run: |
          $url = "https://slproweb.com/download/Win64OpenSSL-3_1_0.exe"
          $output = "openssl-installer.exe"
          Invoke-WebRequest -Uri $url -OutFile $output
          Start-Process -Wait -FilePath .\$output -ArgumentList "/silent /verysilent /install /sp- /suppressmsgboxes /log=openssl-install.log /nocancelduringinstall /dir=C:\OpenSSL-Win64"
          Remove-Item $output

      - name: Set environment variables
        run: |
          echo "OPENSSL_DIR=C:\OpenSSL-Win64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "PATH=${env:Path};C:\OpenSSL-Win64\bin" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true

      - name: Build Rust project
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release



  build-linux:
    runs-on: ubuntu-latest
    needs:
      - build_and_test

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-stable"
          shared-key: ""
          key: ""
          env-vars: ""
          workspaces: ""
          cache-directories: ""
          cache-targets: ""
          cache-on-failure: ""
          save-if: ""

      - run: rustup update stable && rustup default stable

      - name: Build
        run: cargo build --all --release && strip target/release/viva && mv target/release/viva target/release/viva_linux_amd64
        
      - name: upload linux binary
        uses: actions/upload-artifact@v3
        with:
          name: viva_linux_amd64
          path: target/release/viva_linux_amd64

#      - name: Nexus Repo Publish
#        uses: sonatype-nexus-community/nexus-repo-github-action@master
#        with:
#          serverUrl: https://pkgs.frkl.dev
#          username: github-ci
#          password: ${{ secrets.NEXUS_PASSWORD }}
#          format: raw
#          repository: binaries
#          coordinates: directory=viva/linux
#          assets: filename=viva
#          filename: ./target/release/viva_linux_amd64
#
#      - name: Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          files: |
#            target/release/PROJECT_NAME_amd64
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-win:
    runs-on: windows-latest
    needs:
      - build_and_test

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-stable"
          shared-key: ""
          key: ""
          env-vars: ""
          workspaces: ""
          cache-directories: ""
          cache-targets: ""
          cache-on-failure: ""
          save-if: ""

      - run: rustup update stable && rustup default stable

      - name: Build
        run: cargo build --all --release

      - name: upload windows binary
        uses: actions/upload-artifact@v3
        with:
          name: viva_win
          path: target/release/viva.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/release/viva.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-mac:
    runs-on: macos-latest
    needs:
      - build_and_test

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-stable"
          shared-key: ""
          key: ""
          env-vars: ""
          workspaces: ""
          cache-directories: ""
          cache-targets: ""
          cache-on-failure: ""
          save-if: ""

      - run: rustup update stable && rustup default stable

      - name: Build for mac
        run: cargo build --all --release && strip target/release/viva && mv target/release/viva target/release/viva_darwin

      - name: upload darwin binary
        uses: actions/upload-artifact@v3
        with:
          name: viva_darwin
          path: target/release/viva_darwin

  publish-artifacts:
    runs-on: ubuntu-latest
    needs:
      - build-linux
#      - build-win
      - build-mac

    steps:
      - name: download linux binary
        uses: actions/download-artifact@v3
        with:
          name: viva_linux_amd64

      - name: download darwin binary
        uses: actions/download-artifact@v3
        with:
          name: viva_darwin

#      - name: download windows binary
#        uses: actions/download-artifact@v3
#        with:
#          name: viva_win

      - name: publish latest linux binary
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://pkgs.frkl.dev
          username: github-ci
          password: ${{ secrets.NEXUS_PASSWORD }}
          format: raw
          repository: binaries
          coordinates: directory=viva/linux
          assets: filename=viva
          filename: ./viva_linux_amd64

      - name: publish latest darwin binary
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://pkgs.frkl.dev
          username: github-ci
          password: ${{ secrets.NEXUS_PASSWORD }}
          format: raw
          repository: binaries
          coordinates: directory=viva/darwin
          assets: filename=viva
          filename: ./viva_darwin

#      - name: publish latest windows binary
#        uses: sonatype-nexus-community/nexus-repo-github-action@master
#        with:
#          serverUrl: https://pkgs.frkl.dev
#          username: github-ci
#          password: ${{ secrets.NEXUS_PASSWORD }}
#          format: raw
#          repository: binaries
#          coordinates: directory=viva/windows
#          assets: filename=viva.exe
#          filename: ./viva.exe

      - name: release binaries
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            viva_linux_amd64
            viva_darwin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
