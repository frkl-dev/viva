name: Cargo Build & Test

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Rust project - latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
#          - beta
#          - nightly
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-${{ matrix.toolchain }}"
          shared-key: ""
          key: ""
          env-vars: ""
          workspaces: ""
          cache-directories: ""
          cache-targets: ""
          cache-on-failure: ""
          save-if: ""
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo build --verbose
      - run: cargo test --verbose


  build-linux:
    runs-on: ubuntu-latest
    needs:
      - build_and_test

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-stable"
          shared-key: ""
          key: ""
          env-vars: ""
          workspaces: ""
          cache-directories: ""
          cache-targets: ""
          cache-on-failure: ""
          save-if: ""

      - run: rustup update stable && rustup default stable

      - name: Build
        run: cargo build --all --release && strip target/release/viva && mv target/release/viva target/release/viva_linux_amd64

      - name: Nexus Repo Publish
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://pkgs.frkl.dev
          username: github-ci
          password: ${{ secrets.NEXUS_PASSWORD }}
          format: raw
          repository: frkl-binaries
          coordinates: groupId=dev.frkl artifactId=viva version=latest
          filename: ./target/release/viva_linux_amd64

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/PROJECT_NAME_amd64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#  build-win:
#    runs-on: windows-latest
#    needs:
#      - build_and_test
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v1
#
#      - uses: Swatinem/rust-cache@v2
#        with:
#          prefix-key: "v0-rust-stable"
#          shared-key: ""
#          key: ""
#          env-vars: ""
#          workspaces: ""
#          cache-directories: ""
#          cache-targets: ""
#          cache-on-failure: ""
#          save-if: ""
#
#      - run: rustup update stable && rustup default stable
#
#      - name: Build
#        run: cargo build --all --release
#
#      - name: Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          files: target/release/viva.exe
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#  build-mac:
#    runs-on: macos-latest
#    needs:
#      - build_and_test
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v1
#
#      - uses: Swatinem/rust-cache@v2
#        with:
#          prefix-key: "v0-rust-stable"
#          shared-key: ""
#          key: ""
#          env-vars: ""
#          workspaces: ""
#          cache-directories: ""
#          cache-targets: ""
#          cache-on-failure: ""
#          save-if: ""
#
#      - run: rustup update stable && rustup default stable
#
#      - name: Build for mac
#        run: cargo build --all --release && strip target/release/viva && mv target/release/viva target/release/viva_darwin
#
#      - name: Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          files: |
#            target/release/PROJECT_NAME_darwin
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
