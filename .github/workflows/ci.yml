name: Cargo Build & Test

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: "build & test (Linux/Rust '${{ matrix.toolchain }}')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
#          - beta
#          - nightly
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-${{ matrix.toolchain }}"
          shared-key: ""
          key: ""
          env-vars: ""
          workspaces: ""
          cache-directories: ""
          cache-targets: ""
          cache-on-failure: ""
          save-if: ""
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo build --verbose
      - run: cargo test --verbose

  build-linux:
    runs-on: ubuntu-latest
    needs:
      - build_and_test

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - run: rustup update stable && rustup default stable

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-stable"
          shared-key: ""
          key: ""
          env-vars: ""
          workspaces: ""
          cache-directories: ""
          cache-targets: ""
          cache-on-failure: ""
          save-if: ""

      - name: Build
        run: cargo build --all --release && strip target/release/viva && mv target/release/viva target/release/viva_linux_amd64
        
      - name: upload linux binary
        uses: actions/upload-artifact@v3
        with:
          name: viva_linux_amd64
          path: target/release/viva_linux_amd64

  build-win:
    runs-on: windows-latest
    needs:
      - build_and_test

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - run: rustup update stable && rustup default stable

      - name: Cache vcpkg dependencies
        uses: actions/cache@v3
        with:
          path: C:\OpenSSL-Win64
          key: ${{ runner.os }}-vcpkg-2-openssl
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-stable"
          shared-key: ""
          key: ""
          env-vars: ""
          workspaces: ""
          cache-directories: ""
          cache-targets: ""
          cache-on-failure: ""
          save-if: ""

      - name: Install OpenSSL
        run: |
          $url = "https://slproweb.com/download/Win64OpenSSL-3_1_1.exe"
          $output = "openssl-installer.exe"
          Invoke-WebRequest -Uri $url -OutFile $output
          Start-Process -Wait -FilePath .\$output -ArgumentList "/silent /verysilent /install /sp- /suppressmsgboxes /log=openssl-install.log /nocancelduringinstall /dir=C:\OpenSSL-Win64"
          Remove-Item $output

      - name: Set environment variables
        run: |
          echo "OPENSSL_DIR=C:\OpenSSL-Win64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "PATH=${env:Path};C:\OpenSSL-Win64\bin" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

#      - run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
#      - run: vcpkg install openssl:x64-windows-static-md

      - name: Build
        run: cargo build --all --release

      - name: upload windows binary
        uses: actions/upload-artifact@v3
        with:
          name: viva_win
          path: target/release/viva.exe

  build-mac:
    runs-on: macos-latest
    needs:
      - build_and_test

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - run: rustup update stable && rustup default stable

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-stable"
          shared-key: ""
          key: ""
          env-vars: ""
          workspaces: ""
          cache-directories: ""
          cache-targets: ""
          cache-on-failure: ""
          save-if: ""

      - name: Build for mac
        run: cargo build --all --release && strip target/release/viva && mv target/release/viva target/release/viva_darwin

      - name: upload darwin binary
        uses: actions/upload-artifact@v3
        with:
          name: viva_darwin
          path: target/release/viva_darwin

#  build-mac-arm64:
#    runs-on: osx-arm64
#    needs:
#      - build_and_test
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v1
#
#      - run: rustup update stable && rustup default stable
#
#      - uses: Swatinem/rust-cache@v2
#        with:
#          prefix-key: "v0-rust-stable"
#          shared-key: ""
#          key: ""
#          env-vars: ""
#          workspaces: ""
#          cache-directories: ""
#          cache-targets: ""
#          cache-on-failure: ""
#          save-if: ""
#
#      - name: Build for mac
#        run: cargo build --all --release && strip target/release/viva && mv target/release/viva target/release/viva_darwin_arm64
#
#      - name: upload darwin binary
#        uses: actions/upload-artifact@v3
#        with:
#          name: viva_darwin
#          path: target/release/viva_darwin_arm64

  publish-artifacts:
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-win
      - build-mac
#      - build-mac-arm64

    steps:
      - name: download linux binary
        uses: actions/download-artifact@v3
        with:
          name: viva_linux_amd64

      - name: download darwin binary
        uses: actions/download-artifact@v3
        with:
          name: viva_darwin

#      - name: download darwin arm64 binary
#        uses: actions/download-artifact@v3
#        with:
#          name: viva_darwin_arm64

      - name: download windows binary
        uses: actions/download-artifact@v3
        with:
          name: viva_win

      - name: publish latest linux binary
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://pkgs.frkl.dev
          username: github-ci
          password: ${{ secrets.NEXUS_PASSWORD }}
          format: raw
          repository: binaries
          coordinates: directory=viva/linux
          assets: filename=viva
          filename: ./viva_linux_amd64

      - name: publish latest darwin binary
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://pkgs.frkl.dev
          username: github-ci
          password: ${{ secrets.NEXUS_PASSWORD }}
          format: raw
          repository: binaries
          coordinates: directory=viva/darwin
          assets: filename=viva
          filename: ./viva_darwin

#      - name: publish latest darwin arm64 binary
#        uses: sonatype-nexus-community/nexus-repo-github-action@master
#        with:
#          serverUrl: https://pkgs.frkl.dev
#          username: github-ci
#          password: ${{ secrets.NEXUS_PASSWORD }}
#          format: raw
#          repository: binaries
#          coordinates: directory=viva/darwin
#          assets: filename=viva
#          filename: ./viva_darwin_arm64

      - name: publish latest windows binary
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://pkgs.frkl.dev
          username: github-ci
          password: ${{ secrets.NEXUS_PASSWORD }}
          format: raw
          repository: binaries
          coordinates: directory=viva/windows
          assets: filename=viva.exe
          filename: ./viva.exe

      - name: release binaries
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            viva_linux_amd64
            viva_darwin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
